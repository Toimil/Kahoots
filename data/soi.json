{
    "types": ["Kahoot 1", "Kahoot 2", "Kahoot 3"],
    "questions": [
        {
            "question": "Para que ocurra una carrera crítica hacen falta:",
            "answers": [
                {"text": "Dos procesos", "correct": true},
                {"text": "Dos usuarios trabajando simultáneamente", "correct": false},
                {"text": "Dos cores", "correct": false},
                {"text": "Dos niveles de caché", "correct": false}
            ],
            "type": 1
        },
        {
            "question": "Un lugar donde ocurren muchas carreras críticas es...",
            "answers": [
                {"text": "En el kernel del Sistema Operativo", "correct": true},
                {"text": "En la memoria cache", "correct": false},
                {"text": "En las aplicaciones de juegos", "correct": false},
                {"text": "En el espacio de usuario de la memoria virtual", "correct": false}
            ],
            "type": 1
        },
        
        {
            "question": "Usando sleep puedo eliminar carreras críticas",
            "answers": [
                {"text": "Falso, con ella solo se puede conseguir que sean menos probables", "correct": true},
                {"text": "Cierto, solo hay que buscar los valores apropiados para la función", "correct": false},
                {"text": "Cierto, si se llama justo antes de entrar en la región crítica", "correct": false},
                {"text": "Falso, solo retrasa la carrera crítica el tiempo indicado", "correct": false}
            ],
            "type": 1
        }
        ,
        
        {
            "question": "Si tengo una solución con espera activa, ¿me conviene usar pthread_yield para minimizar sus inconvenientes?",
            "answers": [
                {"text": "Si", "correct": true},
                {"text": "No, es mejor usar execv", "correct": false},
                {"text": "No, es mejor usar sleep", "correct": false},
                {"text": "No, es mejor no usar ninguna función", "correct": false}
            ],
            "type": 1
        }
        ,
        
        {
            "question": "Deshabilitar interrupciones en un sistema con dos cores ¿resyekve ek pribkena de las carreras críticas?",
            "answers": [
                {"text": "Si", "correct": true},
                {"text": "No", "correct": false},
                {"text": "Depende del número de usuarios", "correct": false},
                {"text": "Depende del número de procesos", "correct": false}
            ],
            "type": 1
        }
        ,
        
        {
            "question": "La alternancia estricta no es una solución adecuada para las carreras críticas, ya que",
            "answers": [
                {"text": "Un proceso puede estar esperando aunque la región crítica esté libre", "correct": true},
                {"text": "No garantiza exclusión mutua", "correct": false},
                {"text": "Implica espera activa", "correct": false},
                {"text": "No funciona con más de dos procesos", "correct": false}
            ],
            "type": 1
        }
        ,
        
        {
            "question": "La solución de Peterson...",
            "answers": [
                {"text": "Todo lo anterior es correcto", "correct": true},
                {"text": "Es software", "correct": false},
                {"text": "Implica espera activa", "correct": false},
                {"text": "Sirve para varios cores", "correct": false}
            ],
            "type": 1
        }
        ,
        
        {
            "question": "En la solución de Peterson ¿ocurre una carrera crítica?",
            "answers": [
                {"text": "Si pero es irrelevante", "correct": true},
                {"text": "Si pero se puede corregir fácilmente", "correct": false},
                {"text": "No por eso funciona bien", "correct": false},
                {"text": "No la espera activa la evita", "correct": false}
            ],
            "type": 1
        }
        
        ,
        
        {
            "question": "Las variables candado no son una solución correcta para resolver al problema de las carreras críticas ya que...",
            "answers": [
                {"text": "No garantiza exclusión mutua", "correct": true},
                {"text": "Usa variables compartidas", "correct": false},
                {"text": "No garantiza que un proceso no espere indefinidamente", "correct": false},
                {"text": "Sólo funciona en sistemas con un solo core", "correct": false}
            ],
            "type": 1
        }
        
        ,
        
        {
            "question": "Afirmación correcta sobre TSL",
            "answers": [
                {"text": "Realiza una lectura y una escritura en memoria de manera atómica", "correct": true},
                {"text": "Es una rutina del kernel del sistema operativo", "correct": false},
                {"text": "Utiliza dos posiciones de memoria virtual denominadas registro y lock", "correct": false},
                {"text": "Todas las anteriores son ciertas", "correct": false}
            ],
            "type": 1
        }
        ,
        
        {
            "question": "Si el tamaño del buffer es N. ¿Qué valores puede tomar el semáforo 'vacías' en la solución vista en clase?",
            "answers": [
                {"text": "Entre 0 y N-1 inclusive", "correct": true},
                {"text": "Entre 0 y N inclusive", "correct": false},
                {"text": "Entre -N y N inclusive", "correct": false},
                {"text": "Solamente 0 o 1", "correct": false}
            ],
            "type": 2
        },
        
        {
            "question": "¿Porqué en la definición de la función up, el proceso bloqueado por el correspondiente down debe volver a ejecutarlo?",
            "answers": [
                {"text": "Todas las anteriores son ciertas", "correct": true},
                {"text": "Para volver a ganar el acceso a la región crítica", "correct": false},
                {"text": "No haría falta si el S.O. lo desbloquea solo a él, y a ningún otro proceso", "correct": false},
                {"text": "Quizás el que ejecuta el up entra enseguida en la región crítica otra vez", "correct": false}
            ],
            "type": 2
        },
        
        {
            "question": "¿Qué pasa si cuatro procesos quieren ejecutar un down al mismo tiempo en cores diferentes?",
            "answers": [
                {"text": "Las respuestas roja y azul son correctas", "correct": true},
                {"text": "Roja: Quizás se bloquean los cuatro", "correct": false},
                {"text": "Azul: Quizás no se bloquee ninguno", "correct": false},
                {"text": "Verde: Seguro que no se bloquea ninguno", "correct": false}
            ],
            "type": 2
        },
        
        {
            "question": "En el código ensamblador con TSL para la función unlock, ¿dónde se libera al hilo que está bloqueado?",
            "answers": [
                {"text": "El bloqueado realmente está en espera activa, y ahora puede salir de ella", "correct": true},
                {"text": "Eso falta en el código", "correct": false},
                {"text": "La función unlock no desbloquea a nadie, así que no hace falta", "correct": false},
                {"text": "Eso lo hará el SO y no hay necesidad de programarlo", "correct": false}
            ],
            "type": 2
        },
        
        {
            "question": "Respecto a la función trylock...",
            "answers": [
                {"text": "Sirve si hay algo que hacer alternativo a entrar en la región crítica", "correct": true},
                {"text": "Casi siempre es mejor que lock porque no bloquea al proceso", "correct": false},
                {"text": "Es como un lock pero sin bloquear al proceso", "correct": false},
                {"text": "Sirve para intentar bloquear a otro proceso indicado como parámetro", "correct": false}
            ],
            "type": 2
        },
        
        {
            "question": "Una sincronización muy compleja con muchos condicionantes entre varios procesos la programaría con...",
            "answers": [
                {"text": "Semáforos", "correct": true},
                {"text": "La solución de Peterson", "correct": false},
                {"text": "Monitores", "correct": false},
                {"text": "Señales", "correct": false}
            ],
            "type": 3
        },
        
        {
            "question": "Si solo quiero acceso exclusivo a una región crítica, sin más condicionantes, lo más sencillo para programarlo es ...",
            "answers": [
                {"text": "Monitores", "correct": true},
                {"text": "Semáforos", "correct": false},
                {"text": "La solución de Peterson", "correct": false},
                {"text": "Señales", "correct": false}
            ],
            "type": 3
        },
        
        {
            "question": "En la solución al problema del productor consumidor con pase de mensajes vista en clase, ¿quién envía mensajes?",
            "answers": [
                {"text": "Ambos", "correct": true},
                {"text": "El productor", "correct": false},
                {"text": "El consumidor", "correct": false},
                {"text": "El planificador", "correct": false}
            ],
            "type": 3
        },
        
        {
            "question": "Durante la ejecución de la solución, ¿quién envía más mensajes?",
            "answers": [
                {"text": "El consumidor", "correct": true},
                {"text": "El productor", "correct": false},
                {"text": "Los dos por igual", "correct": false},
                {"text": "Es imposible saberlo con seguridad", "correct": false}
            ],
            "type": 3
        },
        
        {
            "question": "Las barreras de sincronización...",
            "answers": [
                {"text": "Bloquean a todos los procesos involucrados salvo a uno", "correct": true},
                {"text": "No bloquean a ningún proceso", "correct": false},
                {"text": "Solo bloquean a un proceso", "correct": false},
                {"text": "Bloquean a todos los procesos involucrados", "correct": false}
            ],
            "type": 3
        }

    ]
}
